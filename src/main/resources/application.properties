## configure port
server.port = 8080

## slack 
slack_access_token=xoxb-1116245948209-1096913554982-8SozO23esgXT33KjO3HEEDVP

## MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/db_bora?useTimezone=true&serverTimezone=America/Sao_Paulo
spring.datasource.username=root
spring.datasource.password=admin

## RabbitMQ # utilizar imagem docker # docker run -d -p 5672:5672 -p 15672:15672 --name=rabbitmq rabbitmq:3.8.3-management
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

## RabbitMQDocker
#spring.rabbitmq.host=rabbitmq
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

## MySQLDocker
#spring.datasource.url=jdbc:mysql://mysqldb/db_bora?useTimezone=true&serverTimezone=America/Sao_Paulo
#spring.datasource.username=root
#spring.datasource.password=admin
#spring.datasource.platform=mysql
#spring.datasource.initialization-mode=always

## hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false
## drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update

## logging level
logging.level.org.springframework=ERROR
logging.level.com.bora=DEBUG
logging.level.=INFO

## output to a file
logging.file.name=${java.io.tmpdir}/bora_service.log
logging.pattern.file=%d %p %c{1.} [%t] %m%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
